entity Country {
	countryName String required
}

entity Carrier {
	name String required
    transId Integer
}

entity Person {
	firstName String required,
	lastName String required,
	companyId Integer required,
	phoneNumber String
}

entity CargoType {
	name String required
}

entity Rating {
chargePostalCode String required,
dischargePostalCode String required,
distance Double required,
contact Integer min(1) max(6) required,
price Integer min(1) max(6) required,
flexibility Integer min(1) max(6) required,
recommendation Grade required,
average Double

}

enum Grade {
	DEF_YES, YES, FINE, NO, DEF_NO, BLACK_LIST
}

relationship ManyToOne {
	Person{carrier(name)} to Carrier{people(firstName)}

    Rating{carrier(name) required} to Carrier{ratings(carrier)}
    Rating{person(firstName) required} to Person
    Rating{chargeCountry(countryName) required} to Country
    Rating{dischargeCountry(countryName) required} to Country
    Rating{cargoType(name) required} to CargoType
}

//filter Person

search Rating with elasticsearch
// Set pagination options
paginate Carrier, Rating with infinite-scroll
paginate Person with pagination

// Use Data Transfert Objects (DTO)
//dto all with mapstruct

// Set service options to all except few
service all with serviceImpl


